import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import path from "path";
import { fileURLToPath } from "url";

// ES module __dirname equivalent
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

// Removed custom esbuild plugin for gpt-3-encoder shim
// const gpt3EncoderShimPlugin = { ... }; // Ensure this or similar is commented out/removed

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
		"wink-bm25-text-search",
		"wink-eng-lite-web-model",
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
	// Ensure any 'plugins: [gpt3EncoderShimPlugin],' line is removed or commented out
	alias: {
		// Add alias to redirect gpt-3-encoder to our shim
		"gpt-3-encoder": path.resolve(__dirname, "src/shims/gpt-3-encoder.ts"),
		// Add aliases for wink modules
		"wink-bm25-text-search": path.resolve(
			__dirname,
			"src/shims/wink-bm25-text-search.ts"
		),
		"wink-eng-lite-web-model": path.resolve(
			__dirname,
			"src/shims/wink-eng-lite-web-model.ts"
		),
	},
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
